---
- name: Instalar y configurar Java, Tomcat y ToDo App en Red Hat usando contenedores (podman)
  hosts: centos
  become: yes
  tasks:
    - name: Instalar Podman
      yum:
        name: podman
        state: present

    - name: Descargar imagen de Tomcat
      command:
        cmd: podman pull docker.io/library/tomcat:9.0.91

    - name: Crear directorio para archivos de la aplicacion
      file:
        path: /opt/tomcat/webapps
        state: directory
        mode: '0755'
    
    - name: Copiar la aplicaci贸n todo.war al host
      copy:
        src: ./files/todo.war  
        dest: /opt/tomcat/webapps/todo.war

    - name: Verificar si el contenedor Tomcat existe
      containers.podman.podman_container:
        name: tomcat
        state: absent

    - name: creo el user tomcat
      ansible.builtin.user:
        name: tomcat
        state: present

    - name: Asegurarse de que el directorio para el archivo de configuraci贸n exista
      file:
        path: /opt/config
        state: directory
        mode: '0755'
        owner: tomcat
        group: tomcat

    - name: Crear archivo de configuraci贸n para la base de datos
      copy:
        content: |
          tipoDB=mysql
          jdbcURL=jdbc:mysql://192.168.56.110:3306/todo
          jdbcUsername=prueba
          jdbcPassword=prueba2024
        dest: /opt/config/app.properties
        owner: tomcat
        group: tomcat
        mode: '0644'
      become: yes
    
    - name: Ejecutar contenedor Tomcat
      containers.podman.podman_container:
        name: tomcat
        image: tomcat:9.0.91
        state: started
        ports:
          - "8080:8080"
          - "8443:8443"
        volumes:
          - /opt/tomcat/webapps:/usr/local/tomcat/webapps
          - /opt/config/:/opt/config

    
    #- name: Crear archivo de configuraci贸n para la base de datos
     # copy:
      #  content: |
       #   tipoDB=mysql
        #  jdbcURL=jdbc:mysql://localhost:3306/todo
         # jdbcUsername=prueba
          #jdbcPassword=prueba2024
        #dest: /opt/tomcat/webapps/WEB-INF/classes/app.properties

    #- name: Configurar Tomcat como servicio systemd
    #  template:
  #    src: ./templates/tomcat.service.j2
    #   dest: /etc/systemd/system/tomcat.service
     # notify:
     #   - Reiniciar Tomcat

    - name: Habilitar y abrir puertos de firewall para Tomcat
      firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
        immediate: yes
      with_items:
        - "8080/tcp"
        - "8443/tcp"

  #handlers:
   # - name: Reiniciar Tomcat
    #  command:
     #   cmd: podman restart tomcat
